#load libraries
library(sf)
library(tmap)
library(terra)
library(tidyverse)
#read in data
focus_counties <- st_read("../../DISS_DATA_SP2023/NCDOT_County_Boundaries/FrenchBroad_MPO_Boundaries.shp")
roads <- st_read("../../DISS_DATA_SP2023/NCRouteCharacteristics_SHP/NCRouteCharacteristics.shp")
TCM <- rast("../../DISS_DATA_SP2023/p45_west_20ft_ch_QL1.tif")
cropped_TCM <- crop(TCM, focus_counties)
masked_TCM <- mask(cropped_TCM, focus_counties)
writeRaster(masked_TCM, "../PROCESSED_DATA/focus_counties_TCM_02082023.tif")
focus_roads <- st_intersection(roads, focus_counties)
st_crs(roads)
st_crs(focus_counties)
roads_reproj <- st_transform(roads, crs = crs(focus_counties))
crs(roads_reproj)
focus_roads <- st_intersection(roads_reproj, focus_counties)
roads_dropped <- st_zm(roads_reproj)
focus_roads <- st_intersection(roads_dropped, focus_counties)
st_write(focus_roads, "../PROCESSED_DATA/focus_roads_02082023.shp")
warnings()
##load libraries
library(tidyverse)
library(sf)
library(tmap)
library(lubridate)
library(sp)
library(rgdal)
library(geosphere)
library(purrr)
library(ivs)
library(sfnetworks)
library(sp)
library(igraph)
library(tidygraph)
##read in closure data
closure_data <- read_csv("../../DISS_DATA_SP2023/deepsearch_weather_02082022.csv")
closure_data_datetime <- closure_data %>% mutate(updated_start_time = strptime(`StartTime (EST)`, format = "%m/%d/%Y %I:%M:%S %p", tz ="EST"),
updated_end_time = strptime(`EndTime (EST)`, format = "%m/%d/%Y %I:%M:%S %p", tz ="EST"),
day = format(updated_start_time, "%Y-%m-%d"), dur = as.numeric(updated_end_time-updated_start_time,"days"))
unique(closure_data_datetime$ConditionName)
View(closure_data_datetime)
##get a list of unique clusters
list_events <- unique(closure_data_datetime$IncidentID)
##read in closure data
TIMS_data <- read_csv("../../DISS_DATA_SP2023/deepsearch_weather_02082022.csv")
TIMS_data_datetime <- TIMS_data %>% mutate(updated_start_time = strptime(`StartTime (EST)`, format = "%m/%d/%Y %I:%M:%S %p", tz ="EST"),
updated_end_time = strptime(`EndTime (EST)`, format = "%m/%d/%Y %I:%M:%S %p", tz ="EST"),
day = format(updated_start_time, "%Y-%m-%d"), dur = as.numeric(updated_end_time-updated_start_time,"days"))
##get a list of unique clusters
list_events <- unique(closure_data_datetime$IncidentID)
##init blank dataframe
closure_events = data.frame()
sum(TIMS_data_datetime$ConditionName == 'Road Closed')
##get a list of unique clusters
list_events <- unique(closure_data_datetime$IncidentID)
##init blank dataframe
closure_events = data.frame()
for (value in list_groups) {
filtered_obs <- subset(TIMS_data_datetime, IncidentID == value)
closure = sum(TIMS_data_datetime$ConditionName == 'Road Closed' | TIMS_data_datetime$ConditionName == 'Road Impassable' | TIMS_data_datetime$ConditionName == 'Road Closed with Detour')
if (closure > 0) {
closure_events <- rbind(closure_events,filtered_obs)
}
}
for (value in list_events) {
filtered_obs <- subset(TIMS_data_datetime, IncidentID == value)
closure = sum(TIMS_data_datetime$ConditionName == 'Road Closed' | TIMS_data_datetime$ConditionName == 'Road Impassable' | TIMS_data_datetime$ConditionName == 'Road Closed with Detour')
if (closure > 0) {
closure_events <- rbind(closure_events,filtered_obs)
}
}
View(closure_events)
##load libraries
library(tidyverse)
library(sf)
library(tmap)
library(lubridate)
library(sp)
library(rgdal)
library(geosphere)
library(purrr)
library(ivs)
library(sfnetworks)
library(sp)
library(igraph)
library(tidygraph)
##read in closure data
TIMS_data <- read_csv("../../DISS_DATA_SP2023/deepsearch_weather_02082022.csv")
TIMS_data_datetime <- TIMS_data %>% mutate(updated_start_time = strptime(`StartTime (EST)`, format = "%m/%d/%Y %I:%M:%S %p", tz ="EST"),
updated_end_time = strptime(`EndTime (EST)`, format = "%m/%d/%Y %I:%M:%S %p", tz ="EST"),
day = format(updated_start_time, "%Y-%m-%d"), dur = as.numeric(updated_end_time-updated_start_time,"days"))
##get a list of unique clusters
list_events <- unique(closure_data_datetime$IncidentID)
##load libraries
library(tidyverse)
library(sf)
library(tmap)
library(lubridate)
library(sp)
library(rgdal)
library(geosphere)
library(purrr)
library(ivs)
library(sfnetworks)
library(sp)
library(igraph)
library(tidygraph)
##read in closure data
TIMS_data <- read_csv("../../DISS_DATA_SP2023/deepsearch_weather_02082022.csv")
TIMS_data_datetime <- TIMS_data %>% mutate(updated_start_time = strptime(`StartTime (EST)`, format = "%m/%d/%Y %I:%M:%S %p", tz ="EST"),
updated_end_time = strptime(`EndTime (EST)`, format = "%m/%d/%Y %I:%M:%S %p", tz ="EST"),
day = format(updated_start_time, "%Y-%m-%d"), dur = as.numeric(updated_end_time-updated_start_time,"days"))
##get a list of unique clusters
list_events <- unique(TIMS_data_datetime$IncidentID)
##init blank dataframe
closure_events = data.frame()
for (value in list_events) {
filtered_obs <- subset(TIMS_data_datetime, IncidentID == value)
closure = sum(TIMS_data_datetime$ConditionName == 'Road Closed' | TIMS_data_datetime$ConditionName == 'Road Impassable' | TIMS_data_datetime$ConditionName == 'Road Closed with Detour')
if (closure > 0) {
closure_events <- rbind(closure_events,filtered_obs)
}
}
sum(TIMS_data_datetime$ConditionName == 'Road Closed' | TIMS_data_datetime$ConditionName == 'Road Impassable' | TIMS_data_datetime$ConditionName == 'Road Closed with Detour')
View(filtered_obs)
for (value in list_events) {
filtered_obs <- subset(TIMS_data_datetime, IncidentID == value)
closure = sum(TIMS_data_datetime$ConditionName == 'Road Closed' | TIMS_data_datetime$ConditionName == 'Road Impassable' | TIMS_data_datetime$ConditionName == 'Road Closed with Detour')
if (closure > 0) {
print(closure)
closure_events <- rbind(closure_events,filtered_obs)
}
}
for (value in list_events) {
filtered_obs <- subset(TIMS_data_datetime, IncidentID == value)
closure = sum(filtered_obs$ConditionName == 'Road Closed' | filtered_obs$ConditionName == 'Road Impassable' | filtered_obs$ConditionName == 'Road Closed with Detour')
if (closure > 0) {
print(closure)
closure_events <- rbind(closure_events,filtered_obs)
}
}
View(closure_events)
#load libraries
library(tidyverse)
library(sf)
library(tmap)
library(lubridate)
library(sp)
library(rgdal)
library(geosphere)
library(purrr)
library(ivs)
library(sfnetworks)
library(sp)
library(igraph)
library(tidygraph)
##read in closure data
TIMS_data <- read_csv("../../DISS_DATA_SP2023/deepsearch_weather_02082022.csv")
TIMS_data_datetime <- TIMS_data %>% mutate(updated_start_time = strptime(`StartTime (EST)`, format = "%m/%d/%Y %I:%M:%S %p", tz ="EST"),
updated_end_time = strptime(`EndTime (EST)`, format = "%m/%d/%Y %I:%M:%S %p", tz ="EST"),
day = format(updated_start_time, "%Y-%m-%d"), dur = as.numeric(updated_end_time-updated_start_time,"days"))
##get a list of unique clusters
list_events <- unique(TIMS_data_datetime$IncidentID)
##init blank dataframe
closure_events = data.frame()
for (value in list_events) {
filtered_obs <- subset(TIMS_data_datetime, IncidentID == value)
closure_events <- rbind(closure_events,filtered_obs)
}
View(closure_events)
View(TIMS_data_datetime)
##init blank dataframe
closure_events = data.frame()
for (value in list_events) {
filtered_obs <- subset(TIMS_data_datetime, IncidentID == value)
closure = sum(filtered_obs$ConditionName == 'Road Closed' | filtered_obs$ConditionName == 'Road Impassable' | filtered_obs$ConditionName == 'Road Closed with Detour')
if (closure > 0) {
closure_events <- rbind(closure_events,filtered_obs)
}
}
View(closure_events)
unique(closure_events$ConditionName)
View(closure_events)
test <- closure_events %>% filter(ConditionName == 'Cleared')
test <- closure_events %>% filter(ConditionName == 'Local Traffic Only')
test <- closure_events %>% filter(ConditionName == 'Congestion')
test <- closure_events %>% filter(ConditionName == 'Shoulder Closed')
test <- closure_events %>% filter(ConditionName == 'Ferry Closed')
test <- closure_events %>% filter(ConditionName == 'Lane Narrowed')
test <- closure_events %>% filter(ConditionName == 'Ramp Closed')
View(test)
View(closure_events)
agg_closure_events <- closure_events %>% group_by(IncidentID) %>% summarise(start = min(updated_start_time), end = max(updated_end_time)) %>%
arrange(mean)
agg_closure_events <- closure_events %>% group_by(IncidentID) %>% summarise(start = min(updated_start_time), end = max(updated_end_time))
View(agg_closure_events)
agg_closure_events <- closure_events %>% group_by(IncidentID) %>% summarise(start = min(updated_start_time), end = max(updated_end_time), RoadName = first(RoadName),
CommonName = first(CommonName), Direction= first(Direction), CrossStreetName = first(CrossStreetName),
CrossStCommonName = first(CrossStCommonName), Latitude= first(Latitude), ConditionName= first(ConditionName),
IncidentType = first(`Incident Type`), Event = first(Event), EventName = first(EventName), Reason= first(Reason),
day= first(day), dur = first(dur) )
View(agg_closure_events)
write_csv("../PROCESSED_DATA/aggregated_closures_02082023.csv")
write_csv(agg_closure_events, "../PROCESSED_DATA/aggregated_closures_02082023.csv")
